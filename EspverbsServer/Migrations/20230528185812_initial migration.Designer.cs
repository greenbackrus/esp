// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using espverbs.Server.DataContext;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(EspverbsContext))]
    [Migration("20230528185812_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("espverbs.Domain.LearningProcess.LearningSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LearningSessions");
                });

            modelBuilder.Entity("espverbs.Domain.LearningProcess.Tasks.TaskBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("LearningSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MutationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WordId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LearningSessionId");

                    b.HasIndex("MutationId");

                    b.HasIndex("WordId");

                    b.ToTable("TaskBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TaskBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("espverbs.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Admin",
                            Name = "Vasily",
                            Password = "E6C83B282AEB2E022844595721CC00BBDA47CB24537C1779F9BB84F04039E1676E6BA8573E588DA1052510E3AA0A32A9E55879AE22B0C2D62136FC0A3E85F8BB",
                            Role = 0
                        });
                });

            modelBuilder.Entity("espverbs.Domain.Words.Verbs.Mutations.VerbsMutationBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PronounForm")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TenseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VerbConjugationType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TenseId");

                    b.ToTable("VerbsMutationBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("VerbsMutationBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("espverbs.Domain.Words.Verbs.Tense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tenses");
                });

            modelBuilder.Entity("espverbs.Domain.Words.WordBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WordBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WordBase");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("espverbs.Domain.LearningProcess.Tasks.TypingTask", b =>
                {
                    b.HasBaseType("espverbs.Domain.LearningProcess.Tasks.TaskBase");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("TypingTask");
                });

            modelBuilder.Entity("espverbs.Domain.Words.Verbs.Mutations.RegularVerbsMutation", b =>
                {
                    b.HasBaseType("espverbs.Domain.Words.Verbs.Mutations.VerbsMutationBase");

                    b.Property<string>("Ending")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("RegularVerbsMutation");
                });

            modelBuilder.Entity("espverbs.Domain.Words.Verbs.Verb", b =>
                {
                    b.HasBaseType("espverbs.Domain.Words.WordBase");

                    b.Property<int>("ConjugationType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ending")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<string>("Root")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Verb");
                });

            modelBuilder.Entity("espverbs.Domain.LearningProcess.LearningSession", b =>
                {
                    b.HasOne("espverbs.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("espverbs.Domain.LearningProcess.Tasks.TaskBase", b =>
                {
                    b.HasOne("espverbs.Domain.LearningProcess.LearningSession", null)
                        .WithMany("Tasks")
                        .HasForeignKey("LearningSessionId");

                    b.HasOne("espverbs.Domain.Words.Verbs.Mutations.VerbsMutationBase", "Mutation")
                        .WithMany()
                        .HasForeignKey("MutationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("espverbs.Domain.Words.WordBase", "Word")
                        .WithMany()
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mutation");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("espverbs.Domain.Words.Verbs.Mutations.VerbsMutationBase", b =>
                {
                    b.HasOne("espverbs.Domain.Words.Verbs.Tense", "Tense")
                        .WithMany()
                        .HasForeignKey("TenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tense");
                });

            modelBuilder.Entity("espverbs.Domain.LearningProcess.LearningSession", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
